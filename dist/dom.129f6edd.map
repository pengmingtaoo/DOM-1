{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","previous","previousSibling","nodeType","next","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.129f6edd.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    //创建节点\r\n    //trim()把字符串两处的空格去掉，template容纳任意元素，不会显示在页面\r\n    //container.content.firstChild 拿到元素\r\n    create(string) {\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    //新增弟弟 在下一个节点前面插入\r\n    after(node, node2) {\r\n        return node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },\r\n    before(node, node2) {\r\n        return node.parentNode.insertBefore(node2, node);\r\n    },\r\n    //新增儿子\r\n    append(parent, node) {\r\n        return parent.appendChild(node);\r\n    },\r\n    //新增爸爸\r\n    wrap(node, parent) {\r\n        dom.before(node, parent);\r\n        dom.after(parent, node);\r\n    },\r\n    remove(node) {\r\n        return node.parentNode.removeChild(node);\r\n    },\r\n    empty(node) {\r\n        const array = [];\r\n        let x = node.firstChild;\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild));\r\n            x = node.firstChild;\r\n        }\r\n        return array;\r\n    },\r\n    //读写属性\r\n    attr(node, name, value) {   //重载\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value);\r\n        } else if (arguments.length === 2) {\r\n            //读属性名\r\n            return node.getAttribute(name);\r\n        }\r\n    },\r\n    //读文本\r\n    text(node, string) {\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string;//ie\r\n            } else {\r\n                node.textContent = string;//firfox\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    //读写HTML内容\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string;\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML;\r\n        }\r\n    },\r\n    //用于修改style\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value;\r\n        } else if (arguments.length === 2) {\r\n\r\n            if (typeof name === 'string') {\r\n                return node.style[name];\r\n            } else if (name instanceof Object) {\r\n\r\n                const object = name;\r\n                for (let key in object) {\r\n                    node.style[key] = object[key];\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    class: {\r\n        //添加class\r\n        add(node, className) {\r\n            node.classList.add(className);\r\n        },\r\n        //删除\r\n        remove(node, className) {\r\n            node.classList.remove(className);\r\n        },\r\n        //查找有没有元素\r\n        has(node, className) {\r\n            //contains 包含\r\n            return node.classList.contains(className);\r\n        }\r\n    },\r\n    //监听事件\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn);\r\n    },\r\n    //解除监听\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn);\r\n    },\r\n    //获取标签或者（标签S）\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector);\r\n    },\r\n    //获取父元素\r\n    parent(node) {\r\n        return node.parentNode;\r\n    },\r\n    //获取子元素\r\n    children(node) {\r\n        return node.children;\r\n    },\r\n    //获取同级兄弟姐妹\r\n    siblings(node) { //filter过滤器\r\n        return Array.from(node.parentNode.children).filter(n => n !== node);\r\n    },\r\n    //获取哥哥\r\n    previous(node) {\r\n        let x = node.previousSibling;\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling;\r\n        }\r\n        return x;\r\n    },\r\n    //获取弟弟\r\n    next(node) {\r\n        let x = node.nextSibling;\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling;\r\n        }\r\n        return x;\r\n    },\r\n    //遍历所有节点\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i]);\r\n        }\r\n    },\r\n    //获取排行第几\r\n    index(node) {\r\n        const list = dom.children(node.parentNode);\r\n        let i;\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break;\r\n            }\r\n            \r\n        }\r\n        return i;\r\n    }\r\n};"]}